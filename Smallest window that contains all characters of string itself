#include<iostream>
#include<climits>
#define MAX_CHARS 256
using namespace std;
string findSubString(string str) 
{ 
    int n = str.length(); 
    int dist_count=0;  
  bool visited[MAX_CHARS]={false};
  for(int i=0;i<n;i++)
  {
      if (visited[str[i]]==false){
          visited[str[i]]=true;
          dist_count++;
      }
  }
  int count=0;
    int start=0;
    
    int minlen=INT_MAX;
    int start_index=-1;
  int curr_count[MAX_CHARS] = {0};
  for(int i=0;i<n;i++){
      curr_count[str[i]]++;
      if(curr_count[str[i]]==1)
      {
          count++;
      }
      if(count==dist_count){
          while(curr_count[str[start]]>1){
              curr_count[str[start]]--;
              start++;
          }
      
      int index=i-start+1;
            if(minlen>index){
                minlen=index;
                start_index=start;
            }
      }
  }
  return str.substr(start_index,minlen);
}

int main() 
{ 
    string str = "aabcbcdbca"; 
    cout << "Smallest window containing all distinct"
            " characters is " << findSubString(str); 
    return 0; 
} 
